// ------   Grid Module   ------------------- /
// ------------------------------------------ /


@mixin PSJ_grid($config: ()) {

	// ------   Default Configuration   ----- /

	$config: map-merge((
		breakpoint-map: $PSJ_breakpoint-map,
		columns: 12,
		restrict-columns: false,
		gutter: $PSJ_base * 4,
		type: 'block',
		restrict-pushes: false,
		include-helpers: true
	), $config);

	$id: unique-id();
	$columns: map-get($config, columns);
	$restrict-columns: map-get($config, restrict-columns);
	$restrict-pushes: map-get($config, restrict-pushes);


	// ------   Registration   -------------- /

	$registration: PSJ_register-module(grid, #{&}, $config);


	// ------   Generated CSS   ------------- /

	@at-root {

		// Main grid
		%#{$id}_grid {
			clear: both;
		}
		%#{$id}_block-grid {
			@include PSJ_clearfix();
		}
		%#{$id}_flex-grid {
			display: flex;
			flex-wrap: wrap;
		}

		& {
			margin-left: map-get($config, gutter) * -1;

			@extend %#{$id}_grid;

			@if (map-get($config,type) == flex) {
				@extend %#{$id}_flex-grid;
			}

			@else {
				@extend %#{$id}_block-grid;
			}

			// User-generated styling
			@content;
		}

		// Main grid helpers
		@if map-get($config, include-helpers) and PSJ_is-module-registered( flex-helpers ) and map-get($config, type) == 'flex' {
			&--justify-right {
				justify-content: right;
			}
		}


		// Rows
		%#{$id}_row {
			clear: both;

			@include PSJ_clearfix();
		}
		&__row {
			@extend %#{$id}_row;
		}


		// Columns
		%#{$id}_column {
			padding-left: map-get($config, gutter);
		}
		%#{$id}_float-column {
			float: left;
		}
		%#{$id}_flex-column {
		}

		&__column {

			@extend %#{$id}_column;

			@if (map-get($config, type) == flex) {
				@extend %#{$id}_flex-column;
			}

			@else {
				@extend %#{$id}_float-column;
			}

			// Columns

			// Only run loops if columns are included
			@if $restrict-columns == false or type-of($restrict-columns) == 'list' {

				// Default columns (used for mobile devices & other tiny screens)
				@for $i from 1 through $columns {

					// Only output CSS if index is in restrictedColumns list
					@if $restrict-columns == false or index($restrict-columns, $i) {

						&--#{ $i } {
							width: ((100 / $columns) * $i) * 1%;
						}
					}
				}

				// Columns for other screen sizes
				@each $breakpoint-label, $viewport-width in map-get($config, breakpoint-map) {

					@media screen and (min-width: $viewport-width) {

						@for $i from 1 through $columns {

							// Only output column if index is in restrict-columns list
							@if $restrict-columns == false or index($restrict-columns, $i) {

								&--#{ $i + \@ + $breakpoint-label } {
									width: ((100 / $columns) * $i) * 1%;
								}
							}
						}
					}
				}
			}

			// Default Pushes

			// Only run loop if pushes are included
			@if $restrict-pushes == false or type-of($restrict-pushes) == 'list' {

				// Default pushes (used for mobile devices & other tiny screens)
				@for $i from 1 through ($columns - 1) {

					// Only output CSS if index is in restrictedPushes list
					@if $restrict-pushes == false or index($restrict-pushes, $i) {

						&--#{ push }-#{ $i } {
							margin-left: ((100 / $columns) * $i) * 1%;
						}
					}
				}
			}

			// Column Helpers

			// Block helpers (linked with stricture helpers module)
			@if map-get($config, include-helpers) and map-get($config, type) != 'flex' and PSJ_is-module-registered( block-helpers ) {

				$helper-block: PSJ_get-module-namespace(block-helpers, 1);

				@for $i from 1 through $columns {

					// Only output CSS if index is in restrictedColumns list
					@if $restrict-columns == false or index($restrict-columns, $i) {

						&--#{ $i + $helper-block }--float-left {
							@extend %PSJ_float-left;
						}

						&--#{ $i + $helper-block }--float-right {
							@extend %PSJ_float-right;
						}

						&--#{ $i + $helper-block }--centered {
							@extend %PSJ_centered;
						}
					}
				}
			}
		}
	}
}
